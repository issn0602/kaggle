%clear

import numpy as np
import pandas as pd
from sklearn.decomposition import PCA
from sklearn.svm import SVC

train=pd.read_csv( 'train.csv', sep=',', header=None ).values
test=pd.read_csv( 'test.csv', sep=',', header=None ).values

# 0-PassengerId, 3-Name, 8-Ticket, 10-Cabin

# Pclass-2, sex-4, age-5, sibsp-6, parch-7, fare-9, embarked-11
train_features = train[1:,[2,4,5,6,7,9,11]]
train_labels = train[1:,1]#.reshape(train.shape[0]-1,1)
test_features = test[1:,[1,3,4,5,6,8,10]]

def replace_str(a):
    for i in range(a.shape[0]):
        if a[i][1] == 'male':
            a[i][1] = 0
        else:
            a[i][1] = 1
    for i in range(a.shape[0]):
        if a[i][6] == 'C':
            a[i][6] = 0
        elif a[i][6] == 'Q':
            a[i][6] = 1
        else:
            a[i][6] = 2

replace_str(train_features)
replace_str(test_features)

train_features = train_features.astype(float)
train_features = np.nan_to_num(train_features)
train_labels = train_labels.astype(float)
test_features = test_features.astype(float)
test_features = np.nan_to_num(test_features)

# =============================================================================
# clf1 = AdaBoostClassifier(n_estimators=100)
# clf2 = BaggingClassifier(n_estimators=100)
# clf3 = ExtraTreesClassifier(n_estimators=100)
# clf4 = GradientBoostingClassifier(n_estimators=100)
# clf5 = RandomForestClassifier(n_estimators=100)
# clf6 = VotingClassifier(estimators=[ ('ada', clf1), ('bag', clf2), ('ext', clf3), ('grad', clf4), ('rf', clf5)], voting='soft')
# clf2.fit(train_features,train_labels)
# =============================================================================

feat = train_features[:,:2]

clf = SVC(kernel='poly',gamma=3)
clf.fit(feat,train_labels)
preds = clf.predict(test_features[:,:2])

op = np.zeros((418,2))
op[:,0] = test[1:,0]
op[:,1] = preds
op = op.astype(int)
df = pd.DataFrame( op, columns = ['PassengerId','Survived'])
df.to_csv("res.csv",index=False)
